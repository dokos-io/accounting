{
  "version": 3,
  "sources": ["../../../../../apps/accounting/accounting/public/js/listview.js", "../../../../../apps/accounting/accounting/public/js/link_control.js", "../../../../../apps/accounting/accounting/public/js/report_view.js", "../../../../../apps/accounting/accounting/public/js/filter.js", "../../../../../apps/accounting/accounting/public/js/formatters.js"],
  "sourcesContent": ["frappe.provide(\"accounting.listview\")\n\n\naccounting.listview = class AListView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tconst doctype = route[1];\n\n\t\t// if (frappe.boot.reporting_doctypes.includes(doctype)) {\n\t\t// \tfrappe.set_route(\n\t\t// \t\t\"List\",\n\t\t// \t\tdoctype,\n\t\t// \t\t\"Report\"\n\t\t// \t);\n\t\t// }\n\t}\n}\n\n$(document).ready(() => {\n\tfrappe.views.ListView = accounting.listview\n})", "frappe.provide(\"frappe.ui\")\nfrappe.provide(\"accounting.ui\")\n\naccounting.ui.ControlSelect = class AControlSelect extends frappe.ui.form.ControlSelect {\n\t//\n};\n\n$(document).ready(() => {\n\tfrappe.ui.form.ControlSelect = accounting.ui.ControlSelect\n})", "frappe.provide(\"accounting.ui\")\n\naccounting.ui.ReportView = class AReportView extends frappe.views.ReportView {\n\tsetup_datatable(values) {\n\t\tthis.$datatable_wrapper.empty();\n\t\tthis.datatable = new DataTable(this.$datatable_wrapper[0], {\n\t\t\tcolumns: this.columns,\n\t\t\tdata: this.get_data(values),\n\t\t\tgetEditor: this.get_editing_object.bind(this),\n\t\t\tlanguage: frappe.boot.lang,\n\t\t\ttranslations: frappe.utils.datatable.get_translations(),\n\t\t\tcheckboxColumn: false,\n\t\t\tinlineFilters: false,\n\t\t\tcellHeight: 60,\n\t\t\tdirection: frappe.utils.is_rtl() ? 'rtl' : 'ltr',\n\t\t\tevents: {\n\t\t\t\tonRemoveColumn: (column) => {\n\t\t\t\t\tthis.remove_column_from_datatable(column);\n\t\t\t\t},\n\t\t\t\tonSwitchColumn: (column1, column2) => {\n\t\t\t\t\tthis.switch_column(column1, column2);\n\t\t\t\t},\n\t\t\t\tonCheckRow: () => {\n\t\t\t\t\tconst checked_items = this.get_checked_items();\n\t\t\t\t\tthis.toggle_actions_menu_button(checked_items.length > 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\thooks: {\n\t\t\t\tcolumnTotal: frappe.utils.report_column_total\n\t\t\t},\n\t\t\theaderDropdown: [{\n\t\t\t\tlabel: __('Add Column'),\n\t\t\t\taction: (datatabe_col) => {\n\t\t\t\t\tlet columns_in_picker = [];\n\t\t\t\t\tconst columns = this.get_columns_for_picker();\n\n\t\t\t\t\tcolumns_in_picker = columns[this.doctype]\n\t\t\t\t\t\t.filter(df => !this.is_column_added(df))\n\t\t\t\t\t\t.map(df => ({\n\t\t\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\t\t\tvalue: df.fieldname\n\t\t\t\t\t\t}));\n\n\t\t\t\t\tdelete columns[this.doctype];\n\n\t\t\t\t\tfor (let cdt in columns) {\n\t\t\t\t\t\tcolumns[cdt]\n\t\t\t\t\t\t\t.filter(df => !this.is_column_added(df))\n\t\t\t\t\t\t\t.map(df => ({\n\t\t\t\t\t\t\t\tlabel: __(df.label) + ` (${cdt})`,\n\t\t\t\t\t\t\t\tvalue: df.fieldname + ',' + cdt\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t.forEach(df => columns_in_picker.push(df));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst d = new frappe.ui.Dialog({\n\t\t\t\t\t\ttitle: __('Add Column'),\n\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: __('Select Column'),\n\t\t\t\t\t\t\t\tfieldname: 'column',\n\t\t\t\t\t\t\t\tfieldtype: 'Autocomplete',\n\t\t\t\t\t\t\t\toptions: columns_in_picker\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: __('Insert Column Before {0}', [__(datatabe_col.docfield.label).bold()]),\n\t\t\t\t\t\t\t\tfieldname: 'insert_before',\n\t\t\t\t\t\t\t\tfieldtype: 'Check'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tprimary_action: ({ column, insert_before }) => {\n\t\t\t\t\t\t\tif (!columns_in_picker.map(col => col.value).includes(column)) {\n\t\t\t\t\t\t\t\tfrappe.show_alert({message: __('Invalid column'), indicator: 'orange'});\n\t\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet doctype = this.doctype;\n\t\t\t\t\t\t\tif (column.includes(',')) {\n\t\t\t\t\t\t\t\t[column, doctype] = column.split(',');\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\tlet index = datatabe_col.colIndex;\n\t\t\t\t\t\t\tif (insert_before) {\n\t\t\t\t\t\t\t\tindex = index - 1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.add_column_to_datatable(column, doctype, index);\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\td.show();\n\t\t\t\t}\n\t\t\t}]\n\t\t});\n\t}\n}\n\nwindow.addEventListener('pageshow', () => {\n\tfrappe.views.ReportView = accounting.ui.ReportView\n})", "frappe.provide(\"accounting\")\n\nclass AFilter extends frappe.ui.Filter {\n\tmake_field(df, old_fieldtype) {\n\t\tsuper.make_field(df, old_fieldtype)\n\n\t\tif (df.parent == \"Journal Entry\" && df.fieldname == \"status\") {\n\t\t\t$(this.field.input).empty().add_options([\"Validated\"])\n\t\t\tthis.field.set_value(\"Validated\")\n\t\t\tthis.field.refresh()\n\t\t}\n\t}\n}\n\nfrappe.form.link_formatters['Journal'] = function (value, doc, docfield) {\n\treturn `${value}: BLABLA`\n};\n\n$(document).ready(() => {\n\t//  frappe.ui.Filter = AFilter\n})\n\n// $(document).on(\"startup\", () => {\n// \tconsole.log(\"Hello\")\n// })", "class AControlCurrency extends frappe.ui.form.ControlCurrency {\n\tformat_for_input(value) {\n\t\tvar formatted_value = format_number(value, this.get_number_format(), this.get_precision());\n\t\treturn isNaN(Number(value)) ? \"\" : formatted_value * -1;\n\t}\n}\n\n$(document).ready(() => {\n\t// frappe.ui.form.ControlCurrency = AControlCurrency\n\n\t// Object.assign(frappe.form.formatters, {\n\t// \tCurrency: function (value, docfield, options, doc) {\n\t// \t\tvar currency  = frappe.meta.get_field_currency(docfield, doc);\n\t// \t\tvar precision = docfield.precision || cint(frappe.boot.sysdefaults.currency_precision) || 2;\n\t\n\t// \t\t// If you change anything below, it's going to hurt a company in UAE, a bit.\n\t// \t\tif (precision > 2) {\n\t// \t\t\tvar parts\t = cstr(value).split(\".\"); // should be minimum 2, comes from the DB\n\t// \t\t\tvar decimals = parts.length > 1 ? parts[1] : \"\"; // parts.length == 2 ???\n\t\n\t// \t\t\tif ( decimals.length < 3 || decimals.length < precision ) {\n\t// \t\t\t\tconst fraction = frappe.model.get_value(\":Currency\", currency, \"fraction_units\") || 100; // if not set, minimum 2.\n\t\n\t// \t\t\t\tif (decimals.length < cstr(fraction).length) {\n\t// \t\t\t\t\tprecision = cstr(fraction).length - 1;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\n\t// \t\tvalue = (value == null || value === \"\") ? \"\" : format_currency(value * -1, currency, precision);\n\t\n\t// \t\tif ( options && options.only_value ) {\n\t// \t\t\treturn value;\n\t// \t\t} else {\n\t// \t\t\treturn frappe.form.formatters._right(value, options);\n\t// \t\t}\n\t// \t},\n\t// })\n})"],
  "mappings": "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",
  "names": []
}
